 项目

功能：
	>注册
	>登录

----------------------------

JSP:
	*login.jsp	登录表单
	*regist.jsp	注册表单
	*index.jsp	主页（只有登录成功才能看到）
	
Servlet：
	*LoginServlet
	*RegistServlet
	
Service：
	*UserService	与用户相关的业务类
	
Dao:
	*UserDao	与用户相关的数据类
	
Domain：
	*User（对应数据库，还要对应所有表单）
		>username
		>password
		>verityCode
		
---------------------------

数据库设计
	*users.xml
		<users>
			<user username="xxx" password="xxx"/>
			<user username="xxx" password="xxx"/>
		</users>
		
---------------------------

步骤：

1.创建空项目
2.导包：
	*CommonUtils
	*commons-beanutils.jar
	*commons-loggin.jar
	*dom4j
3.建包：
	*cn.xc.user.domain
		>User.java
	*cn.xc.user.dao
		>UserDao.java
	*cn.xc.user.service
		>UserService.java
	*cn.xc.user.web.servlet
		>LoginServlet.java
		>RegistServlet.java
4.Jsp
	*login.jsp
	*regist.jsp
	*index.jsp
5.在E盘下创建一个users.xml文件
	*添加根元素<users>
	*保证文件为utf-8编码
	
------------------------

注册：

regist.jsp
	>第一步：完成regist.jsp的基本功能
RegistServlet
	>封装表单数据到User对象中
	>调用service的regist()方法
		*如果这个方法没有出问题，输出“注册成功”
		*如果这个方法抛出了异常，把错误信息保存到request域中，转发到regist.jsp（显示错误信息）
UserService #regist()
	>没有返回值，但注册失败会抛出一个自定义异常，可以在异常中添加异常信息（自定义一个异常类）
	>校验用户名是否已被注册（通过用户名查询用户），如果已被注册，抛出异常，异常信息为“用户名已被注册！”
	>添加用户
	
UserDao：通过业务分析，得到结果：需要提供两个方法
	>按用户名查询用户对象：User findByUsername(String username)
	>插入一个新用户到数据库中:void add(User user)
	
	
工作：

1.在service层添加一个UserException

2.dao:
	*User findByUsername(String username)
	*void add(User user)
	
3.service
	*void regist() throws UserException 
	
4.servlet
	1)封装表单数据到User对象中
	2)依赖User使用service的regist()方法
		3)如果得到UserException，那么保存异常信息到request域中，转发到regist.jsp
		4)输出“注册成功”


==================================
==================================

登录功能

页面：login.jsp --> 登录表单

LoginServlet
	1.获取表单数据，封装到User中
	2.调用service的login()方法，传递form过去！
	3.如果service的login()方法，没有抛出异常，返回一个User对象
		4.有异常，获取异常信息，保存到request域中，并保存form，转发到login.jsp
		5.没有异常，保存返回的User对象到session域中！！重定向到welcome.jsp（显示当前用户信息）

UserService #login()
	public User login(User form){...}
	1.使用用户名查询数据库，得到返回的User
		>返回为null，抛出异常，异常信息为“用户名不存在”
		>返回不为null，获取查询出来的user的password和form的password进行比较，如果不同抛出异常，信息为“密码错误”
		
UserDao
	1.通过用户名查询用户！（已存在，不用再写了）

















